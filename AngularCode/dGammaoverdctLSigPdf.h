/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/

#ifndef DGAMMAOVERDCTLSIGPDF
#define DGAMMAOVERDCTLSIGPDF

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"

class dGammaoverdctLSigPdf : public RooAbsPdf {
public:
  dGammaoverdctLSigPdf() {} ;
  dGammaoverdctLSigPdf(const char *name, const char *title,
	      RooAbsReal& _ctL,
	      RooAbsReal& _bCoeff,
	      RooAbsReal& _cCoeff,
        RooAbsReal& _l1L,
        RooAbsReal& _l2L,
	      RooAbsReal& _l4L);

  dGammaoverdctLSigPdf(const dGammaoverdctLSigPdf& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new dGammaoverdctLSigPdf(*this,newname); }
  inline virtual ~dGammaoverdctLSigPdf() { }
  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const ;
  Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ;

protected:

  Double_t theValIntSin2XP0(Double_t x) const ;
  Double_t theValIntSin2XP1(Double_t x) const ;
  Double_t theValIntSin2XP2(Double_t x) const ;
  Double_t theValIntSin2XP3(Double_t x) const ;
  Double_t theValIntSin2XP4(Double_t x) const ;
  RooRealProxy ctL ;

  RooRealProxy bCoeff ;
  RooRealProxy cCoeff ;
  RooRealProxy l1L ;
  RooRealProxy l2L ;
  RooRealProxy l4L ;

  Double_t evaluate() const ;



private:

  ClassDef(dGammaoverdctLSigPdf,1) // Your description goes here...
};

#endif
